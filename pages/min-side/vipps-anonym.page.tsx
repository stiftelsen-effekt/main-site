import Head from "next/head";
import { Layout } from "../../components/profile/layout/layout";
import { LayoutPage } from "../../types";
import "react-toastify/dist/ReactToastify.css";
import { useAnonymousVippsAgreement, widgetQuery } from "../../_queries";
import styles from "../../styles/Agreements.module.css";
import { PageContent } from "../../components/profile/layout/PageContent/PageContent";
import { getClient } from "../../lib/sanity.server";
import { groq } from "next-sanity";
import { Navbar } from "../../components/profile/layout/navbar";
import { footerQuery } from "../../components/shared/layout/Footer/Footer";
import { MainHeader } from "../../components/shared/layout/Header/Header";
import { AgreementDetails } from "../../components/profile/shared/lists/agreementList/AgreementDetails";
import { useRouter } from "next/router";
import { useState, useEffect } from "react";

const VippsAnonymous: LayoutPage<{ data: any; preview: boolean }> = ({ data, preview }) => {
  const settings = data.result.settings[0];
  const router = useRouter();
  const agreementUrlCode = router.query.agreementUrlCode as string;
  const {
    loading: vippsLoading,
    data: vipps,
    isValidating: vippsRefreshing,
    error: vippsError,
  } = useAnonymousVippsAgreement(agreementUrlCode);

  const [agreement, setAgreement] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  return (
    <>
      <Head>
        <title>Gi Effektivt. | Anonym Vipps-avtale</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <MainHeader hideOnScroll={false}>
        <Navbar logo={settings.logo} />
      </MainHeader>

      <PageContent>
        <div className={styles.container}>
          <h3 className={styles.header}>Din Vipps-avtale</h3>
          {loading && <div>Loading...</div>}
          {error && <div>Error: {error}</div>}
          {/* {agreement &&
            <AgreementDetails
              type={agreement.type}
              endpoint={agreement.endpoint}
              inputDistribution={}
              inputSum={agreement.amount}
              inputDate={agreement.date}
            />
          } */}
        </div>
      </PageContent>
    </>
  );
};

export async function getStaticProps({ preview = false }) {
  const result = await getClient(preview).fetch(fetchProfilePage);

  return {
    props: {
      preview: preview,
      data: {
        result: result,
        query: fetchProfilePage,
        queryParams: {},
      },
    },
  };
}

const fetchProfilePage = groq`
{
  "settings": *[_type == "site_settings"] {
    logo,
  },
  ${footerQuery}
  ${widgetQuery}
}
`;

VippsAnonymous.layout = Layout;
export default VippsAnonymous;
